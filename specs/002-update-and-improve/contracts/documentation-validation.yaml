openapi: 3.0.3
info:
  title: Documentation Validation Contracts
  description: Validation contracts for IBM i MCP Server documentation quality assurance
  version: 1.0.0

paths:
  /docs/validate/content:
    post:
      summary: Validate documentation content structure and quality
      description: Validates that documentation pages meet quality standards
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentValidationRequest'
      responses:
        '200':
          description: Validation completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentValidationResponse'
        '400':
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /docs/validate/links:
    post:
      summary: Validate internal and external links
      description: Checks that all links in documentation resolve correctly
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkValidationRequest'
      responses:
        '200':
          description: Link validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkValidationResponse'

  /docs/validate/code:
    post:
      summary: Validate code examples
      description: Ensures all code examples are syntactically correct and executable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeValidationRequest'
      responses:
        '200':
          description: Code validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeValidationResponse'

  /docs/validate/diagrams:
    post:
      summary: Validate Mermaid diagrams
      description: Checks that Mermaid diagrams render correctly
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagramValidationRequest'
      responses:
        '200':
          description: Diagram validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagramValidationResponse'

  /docs/quickstart/validate:
    post:
      summary: Validate quickstart completion time
      description: Measures time to complete quickstart guide (target â‰¤15 minutes)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuickstartValidationRequest'
      responses:
        '200':
          description: Quickstart validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickstartValidationResponse'

components:
  schemas:
    ContentValidationRequest:
      type: object
      required:
        - pages
      properties:
        pages:
          type: array
          items:
            $ref: '#/components/schemas/DocumentationPage'
        validation_rules:
          type: array
          items:
            type: string
          example:
            - "title_uniqueness"
            - "description_length"
            - "audience_specified"
            - "difficulty_specified"

    DocumentationPage:
      type: object
      required:
        - title
        - description
        - audience
        - difficulty
        - file_path
        - content
      properties:
        title:
          type: string
          minLength: 5
          maxLength: 60
          description: "Page title (must be unique)"
        description:
          type: string
          minLength: 120
          maxLength: 160
          description: "SEO meta description"
        audience:
          type: string
          enum: ["developer", "administrator", "all"]
        difficulty:
          type: string
          enum: ["beginner", "intermediate", "advanced"]
        file_path:
          type: string
          pattern: "^[a-z0-9-/]+\\.mdx?$"
          description: "Relative path from docs/ root"
        content:
          type: string
          description: "Full MDX content"
        nav_order:
          type: integer
          minimum: 1
        related_pages:
          type: array
          items:
            type: string
        prerequisites:
          type: array
          items:
            type: string

    ContentValidationResponse:
      type: object
      required:
        - validation_passed
        - issues
      properties:
        validation_passed:
          type: boolean
        issues:
          type: array
          items:
            $ref: '#/components/schemas/ValidationIssue'
        statistics:
          $ref: '#/components/schemas/ContentStatistics'

    ValidationIssue:
      type: object
      required:
        - severity
        - message
        - file_path
      properties:
        severity:
          type: string
          enum: ["error", "warning", "info"]
        message:
          type: string
        file_path:
          type: string
        line_number:
          type: integer
        suggestion:
          type: string

    ContentStatistics:
      type: object
      properties:
        total_pages:
          type: integer
        total_words:
          type: integer
        avg_reading_time_minutes:
          type: number
        code_examples_count:
          type: integer
        diagrams_count:
          type: integer

    LinkValidationRequest:
      type: object
      required:
        - pages
      properties:
        pages:
          type: array
          items:
            type: string
          description: "File paths to validate links in"
        check_external:
          type: boolean
          default: true
        timeout_seconds:
          type: integer
          default: 30

    LinkValidationResponse:
      type: object
      required:
        - validation_passed
        - broken_links
      properties:
        validation_passed:
          type: boolean
        broken_links:
          type: array
          items:
            $ref: '#/components/schemas/BrokenLink'
        total_links_checked:
          type: integer

    BrokenLink:
      type: object
      required:
        - url
        - file_path
        - error_message
      properties:
        url:
          type: string
        file_path:
          type: string
        line_number:
          type: integer
        error_message:
          type: string
        status_code:
          type: integer

    CodeValidationRequest:
      type: object
      required:
        - code_examples
      properties:
        code_examples:
          type: array
          items:
            $ref: '#/components/schemas/CodeExample'

    CodeExample:
      type: object
      required:
        - language
        - code_content
        - file_path
      properties:
        language:
          type: string
          enum: ["typescript", "javascript", "sql", "yaml", "bash", "json"]
        code_content:
          type: string
        file_path:
          type: string
        title:
          type: string
        validation_required:
          type: boolean
          default: true
        environment:
          type: string
          enum: ["development", "production", "any"]

    CodeValidationResponse:
      type: object
      required:
        - validation_passed
        - results
      properties:
        validation_passed:
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/CodeValidationResult'

    CodeValidationResult:
      type: object
      required:
        - file_path
        - language
        - passed
      properties:
        file_path:
          type: string
        language:
          type: string
        passed:
          type: boolean
        error_message:
          type: string
        warnings:
          type: array
          items:
            type: string

    DiagramValidationRequest:
      type: object
      required:
        - diagrams
      properties:
        diagrams:
          type: array
          items:
            $ref: '#/components/schemas/MermaidDiagram'

    MermaidDiagram:
      type: object
      required:
        - diagram_type
        - mermaid_code
        - file_path
      properties:
        diagram_type:
          type: string
          enum: ["flowchart", "sequence", "architecture", "entity_relationship"]
        mermaid_code:
          type: string
        file_path:
          type: string
        title:
          type: string
        alt_text:
          type: string

    DiagramValidationResponse:
      type: object
      required:
        - validation_passed
        - results
      properties:
        validation_passed:
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/DiagramValidationResult'

    DiagramValidationResult:
      type: object
      required:
        - file_path
        - renders_correctly
      properties:
        file_path:
          type: string
        renders_correctly:
          type: boolean
        error_message:
          type: string
        complexity_score:
          type: integer
          minimum: 1
          maximum: 10

    QuickstartValidationRequest:
      type: object
      required:
        - quickstart_steps
      properties:
        quickstart_steps:
          type: array
          items:
            $ref: '#/components/schemas/QuickstartStep'
        target_completion_minutes:
          type: integer
          default: 15

    QuickstartStep:
      type: object
      required:
        - step_number
        - action
        - estimated_duration_minutes
      properties:
        step_number:
          type: integer
          minimum: 1
        action:
          type: string
        estimated_duration_minutes:
          type: number
        verification_method:
          type: string
        potential_blockers:
          type: array
          items:
            type: string

    QuickstartValidationResponse:
      type: object
      required:
        - meets_target_time
        - total_estimated_minutes
      properties:
        meets_target_time:
          type: boolean
        total_estimated_minutes:
          type: number
        step_breakdown:
          type: array
          items:
            $ref: '#/components/schemas/StepValidationResult'
        optimization_suggestions:
          type: array
          items:
            type: string

    StepValidationResult:
      type: object
      required:
        - step_number
        - duration_minutes
        - complexity
      properties:
        step_number:
          type: integer
        duration_minutes:
          type: number
        complexity:
          type: string
          enum: ["simple", "moderate", "complex"]
        blockers_identified:
          type: array
          items:
            type: string

    ValidationError:
      type: object
      required:
        - error_code
        - message
      properties:
        error_code:
          type: string
        message:
          type: string
        details:
          type: object